{"version":3,"sources":["state/action-types/action-types.ts","hooks/useTypedSelector.ts","assets/logos/01_RGB/02_PNG/Spotify_Logo_RGB_White.png","components/UI/Backdrop/Backdrop.tsx","components/UI/Spinner/Spinner.tsx","state/sagas/helper.js","state/reducers/uiReducer.ts","state/reducers/userDataReducer.ts","state/reducers/loginReducer.ts","state/reducers/errorReducer.ts","state/reducers/rootReducer.ts","state/api/test-api.ts","state/sagas/test-saga.js","state/sagas/index.ts","store.ts","api/apiConfig.ts","api/axios/axiosConfigs.ts","state/action-creators/login-action-creators.ts","state/action-creators/user-data-action-creators.ts","state/action-creators/ui-action-creators.ts","hooks/useActions.ts","helpers/getParams.ts","components/UserTopData/UserTopData.tsx","components/Main/Main.tsx","components/UI/Error/Error.tsx","components/Layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Main/Main.module.css","components/Layout/Layout.module.css","components/UserTopData/UserTopData.module.css","App.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css"],"names":["ActionType","useTypedSelector","useSelector","Backdrop","props","show","className","css","children","Spinner","id","Loader","createSagaAction","type","REQUEST","SUCCESS","FAILURE","constants","POST_TEST","PUT_TEST","GET_TEST","DELETE_TEST","initialState","loading","userTopData","userProfileInfo","display_name","images","userInputSelect","timeTerm","isLoggedIn","authCode","accessToken","refreshToken","expiresAt","Date","error","appReducer","combineReducers","login","state","action","USER_AUTHORIZED","payload","AUTH_CODE_OBTAINED","ACCESS_TOKEN_OBTAINED","access_token","refresh_token","expires_in","console","log","userData","USER_INPUT_SELECTED","USER_TOP_DATA_OBTAINED","USER_PROFILE_INFO_OBTAINED","ui","TOGGLE_LOADING","ERROR","_makeRequest","a","path","options","baseUrl","opts","getPayload","method","params","qs","stringify","addQueryPrefix","requestUrl","fetch","response","ok","Error","statusText","body","isJson","Object","prototype","toString","call","headers","extras","JSON","assign","POST","PUT","DELETE","GET","email","addTestExample","watchAddTestExample","getTest","watchGetTest","deleteTest","watchDeleteTest","updateTest","watchUpdateTest","rootSaga","api","put","message","takeLatest","all","fork","sagas","testSaga","map","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","serializedState","localStorage","getItem","parse","err","loadFromLocalStorage","store","createStore","undefined","applyMiddleware","thunk","subscribe","clear","setItem","saveToLocalStorage","getState","run","accessTokenReqData","set","refreshTokenReqData","TOKEN_ENDPOINT","REDIRECT_URI","API_URL","CLIENT_ID","scopes","loginUri","AUTH_ENDPOINT","encodeURIComponent","base64EncodedIdAndSecret","btoa","URLSearchParams","append","axiosGetTopArtistsConfig","axiosTokenReqConfig","userAuthorized","isAuthorized","dispatch","USER_LOGOUT","authCodeObtained","getAccessToken","axios","post","data","setHours","getHours","history","pushState","getRefreshToken","getUserProfileInfo","get","getUserTopData","expiresIn","items","userInputSelected","testAction","toggleLoading","useLoginActions","useDispatch","bindActionCreators","loginActionCreators","getParams","url","code","parser","document","createElement","href","vars","search","substring","split","i","length","pair","decodeURIComponent","UserTopData","Fragment","GridList","cols","cellHeight","spacing","artist","index","GridListTile","rows","ArtistImage","src","album","alt","name","GridListTileBar","title","titlePosition","actionPosition","TitleBar","Main","useState","userDataActionCreators","useUserDataActions","handleChange","e","inputChangedIs","target","value","useEffect","now","getTime","Avatar","UserImage","Button","variant","onClick","GroupDiv","htmlFor","Select","onChange","Layout","location","Container","Logo","logo","Anchor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fc349003.chunk.js","sourcesContent":["import { createSagaAction } from '../sagas/helper';\r\n\r\nexport enum ActionType {\r\n  //LOGIN\r\n  USER_AUTHORIZED = 'USER_AUTHORIZED',\r\n  USER_LOGOUT = 'USER_LOGOUT',\r\n  USER_PROFILE_INFO_OBTAINED = 'USER_PROFILE_INFO_OBTAINED',\r\n  AUTH_CODE_OBTAINED = 'AUTH_CODE_OBTAINED',\r\n  ACCESS_TOKEN_OBTAINED = 'ACCESS_TOKEN_OBTAINED',\r\n  REFRESH_TOKEN_OBTAINED = 'REFRESH_TOKEN_OBTAINED',\r\n\r\n  //USER DATA\r\n  USER_TOP_DATA_OBTAINED = 'USER_TOP_DATA_OBTAINED',\r\n  USER_INPUT_SELECTED = 'USER_INPUT_SELECTED',\r\n\r\n  //UI\r\n  TOGGLE_LOADING = 'TOGGLE_LOADING',\r\n\r\n  //ERRORS\r\n  ERROR = 'ERROR',\r\n\r\n}\r\n\r\nexport const constants = {\r\n  POST_TEST: createSagaAction('POST_TEST'),\r\n  PUT_TEST: createSagaAction('PUT_TEST'),\r\n  GET_TEST: createSagaAction('GET_TEST'),\r\n  DELETE_TEST: createSagaAction('DELETE_TEST')\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../state\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","export default __webpack_public_path__ + \"static/media/Spotify_Logo_RGB_White.f48fb565.png\";","import React from 'react'\r\nimport css from './Backdrop.module.css'\r\n\r\ninterface Props {\r\n    show: boolean\r\n}\r\n\r\nconst Backdrop: React.FC<Props> = (props) => {\r\n    return (\r\n        props.show ?\r\n        <div className={css.Backdrop}>\r\n            {props.children}\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","import React from 'react'\r\nimport css from './Spinner.module.css'\r\n\r\nconst Spinner: React.FC = () => {\r\n  return (\r\n    \r\n    <div id=\"Loader\" className={css.Loader}>Loading...</div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","/**\n * Internal function to create async saga action types.\n *\n * @param  String type Type to create\n * @return Object      Containing ACTION|SUCCESS|FAILED properties\n */\nexport function createSagaAction(type) {\n  return {\n    REQUEST: `${type}.REQUEST`,\n    SUCCESS: `${type}.SUCCESS`,\n    FAILURE: `${type}.FAILURE`\n  };\n}\n\nexport function createActionsConstants(names) {\n  return names.reduce((acc, name) => ({ ...acc, [name]: createSagaAction(name) }), {});\n}\n","import { Action } from '../actions/actions';\r\nimport { ActionType } from './../action-types/action-types';\r\n\r\ninterface UIState {\r\n  loading: boolean\r\n}\r\n\r\nconst initialState = {\r\n  loading: false\r\n}\r\n\r\nexport const uiReducer = (state: UIState = initialState, action: Action): UIState => {\r\n  switch (action.type) {\r\n    case (ActionType.TOGGLE_LOADING):\r\n      return {\r\n          loading: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { Action } from '../actions/actions';\r\nimport { ActionType } from './../action-types/action-types';\r\n\r\ninterface UserDataState {\r\n  userTopData: string[]\r\n  userProfileInfo: any\r\n  userInputSelect: {\r\n    type: string\r\n    timeTerm: string\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  userTopData: [],\r\n  userProfileInfo: {\r\n    display_name: '',\r\n    images: []\r\n  },\r\n  userInputSelect: {\r\n    type: 'artists',\r\n    timeTerm: 'long_term'\r\n  }\r\n}\r\n\r\nexport const userDataReducer = (state: UserDataState = initialState, action: Action): UserDataState => {\r\n  switch (action.type) {\r\n    case (ActionType.USER_INPUT_SELECTED):\r\n      return {\r\n        ...state,\r\n        userInputSelect: action.payload\r\n      }\r\n    case (ActionType.USER_TOP_DATA_OBTAINED):\r\n      return {\r\n        ...state,\r\n        userTopData: action.payload \r\n      }\r\n    case (ActionType.USER_PROFILE_INFO_OBTAINED):\r\n      return {\r\n        ...state,\r\n        userProfileInfo: {...action.payload}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { Action } from '../actions/actions';\r\nimport { ActionType, constants } from './../action-types/action-types';\r\n\r\ninterface LoginState {\r\n    isLoggedIn: boolean\r\n    authCode: string\r\n    accessToken: string | undefined\r\n    refreshToken: string | undefined\r\n    expiresAt: Date\r\n}\r\n\r\nconst initialState: LoginState = {\r\n    isLoggedIn: false,\r\n    authCode: '',\r\n    accessToken: '',\r\n    refreshToken: '',\r\n    expiresAt: new Date()\r\n}\r\n\r\nexport const loginReducer = (state: LoginState = initialState, action: Action): LoginState => {\r\n    switch (action.type) {\r\n        case (ActionType.USER_AUTHORIZED):\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.payload.isLoggedIn,\r\n                accessToken: action.payload.accessToken,\r\n                refreshToken: action.payload.refreshToken\r\n            }\r\n        case (ActionType.AUTH_CODE_OBTAINED):\r\n            return {\r\n                ...state,\r\n                authCode: action.payload\r\n            }\r\n        case (ActionType.ACCESS_TOKEN_OBTAINED):\r\n            // console.log('Refresh token: ', action.payload.refresh_token)\r\n            return {\r\n                ...state,\r\n                accessToken: action.payload.access_token,\r\n                refreshToken: action.payload.refresh_token ? action.payload.refresh_token : state.refreshToken,\r\n                expiresAt: action.payload.expires_in,\r\n            }\r\n        // case (ActionType.REFRESH_TOKEN_OBTAINED):\r\n        //     return {\r\n        //         ...state,\r\n        //         refreshToken: action.payload\r\n        //     }\r\n        case (constants.POST_TEST.REQUEST):\r\n            console.log('aca se mando.. #esperando')\r\n            return state\r\n        case (constants.POST_TEST.SUCCESS):\r\n            console.log('aca anduvo..')\r\n            return state\r\n        case (constants.POST_TEST.FAILURE):\r\n            console.log('aca falló..')\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}","import { Action } from '../actions/actions';\r\nimport { ActionType } from './../action-types/action-types';\r\n\r\ninterface ErrorState {\r\n  error: any\r\n}\r\n\r\nconst initialState: ErrorState = {\r\n  error: null  \r\n}\r\n\r\nexport const errorReducer = (state: ErrorState = initialState, action: Action): ErrorState => {\r\n  switch (action.type) {\r\n    case (ActionType.ERROR):\r\n      return {\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { uiReducer } from './uiReducer';\r\nimport { combineReducers } from \"redux\";\r\nimport { userDataReducer } from './userDataReducer';\r\nimport { loginReducer } from \"./loginReducer\";\r\nimport { errorReducer } from './errorReducer';\r\n\r\nexport const rootReducer = (state: any, action: any) => {\r\n  if (action.type === 'USER_LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport const appReducer = combineReducers({\r\n  login: loginReducer,\r\n  userData: userDataReducer,\r\n  ui: uiReducer,\r\n  error: errorReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\n","import qs from 'qs'\n\nconst _makeRequest = async (path = \"aca pones ej /song/isjd1941\", options: any, baseUrl = \"aca metes la url de spotify\") => {\n\n    let opts = getPayload(options);\n    if (opts.method === 'GET' && opts.params) {\n      path += qs.stringify(opts.params, { addQueryPrefix: true });\n    }\n    const requestUrl = `${baseUrl}/api/${path}`;\n  \n    let response = await fetch(requestUrl, opts);\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return response;\n};\n  \n  function getPayload(options: any) {\n    // Stringify body option for fetch()\n    const { body } = options;\n    const isJson = Object.prototype.toString.call(body) === '[object Object]';\n  \n    let headers = isJson ? { 'Content-Type': 'application/json' } : {};\n  \n\n    // ACA VA EL AUTH\n    // headers = Object.assign(headers, options.headers, {\n    //   Authorization: getAuthorization()\n    // });\n  \n    const extras = isJson ? { body: JSON.stringify(body) } : {};\n    const result = Object.assign({}, options, { headers }, extras);\n    //const result = Object.assign({}, options, { headers }, extras, { agent });\n    //console.log(agent);\n  \n    return result;\n  }\n  \n  // POST EXAMPLE\n  export function POST(body: any) {\n    return _makeRequest('/auth/google-token', {\n      method: 'POST',\n      body\n    });\n  }\n  \n  // put\n  export function PUT(body: any) {\n    return _makeRequest('/auth/refresh-token', {\n      method: 'PUT',\n      body\n    });\n  }\n  \n  // DELETE\n  export function DELETE() {\n    return _makeRequest('/auth/refresh-token', {\n      method: 'DELETE'\n    });\n  }\n  \n  \n  // GET\n  export function GET(body: any) {\n    return _makeRequest(`/mock?user=${body.email}`, {\n      method: 'GET'\n    });\n  }\n  \n  ","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\n\nimport { constants } from '../action-types/action-types';\nimport * as api from '../api/test-api';\n\nfunction* addTestExample(action) {\n  try {\n    let { body } = action;\n\n    console.log('[SAGA]: Request')\n\n    const payload = yield call(api.POST, body);\n\n    console.log('[SAGA]: Success')\n    yield put({ type: constants.POST_TEST.SUCCESS, payload });\n  } catch (e) {\n    console.log('[SAGA]: Failure')\n    yield put({\n      type: constants.POST_TEST.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nfunction* watchAddTestExample() {\n  yield takeLatest(constants.POST_TEST.REQUEST, addTestExample);\n}\n\n// ---------------\n\nfunction* getTest(action) {\n  try {\n    const payload = yield call(api.GET, action.body);\n\n    yield put({ type: constants.GET_TEST.SUCCESS, payload });\n  } catch (e) {\n    yield put({\n      type: constants.GET_TEST.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nfunction* watchGetTest() {\n  yield takeLatest(constants.GET_TEST.REQUEST, getTest);\n}\n\n// ---------------\n\nfunction* deleteTest(action) {\n  try {\n    let { body } = action;\n    const payload = yield call(api.DELETE, body);\n    yield put({ type: constants.DELETE_TEST.SUCCESS, payload });\n  } catch (e) {\n    yield put({\n      type: constants.DELETE_TEST.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nfunction* watchDeleteTest() {\n  yield takeLatest(constants.DELETE_TEST.REQUEST, deleteTest);\n}\n\n// ---------------\n\nfunction* updateTest(action) {\n  try {\n    const payload = yield call(api.PUT, action.body);\n\n    yield put({ type: constants.PUT_TEST.SUCCESS, payload });\n  } catch (e) {\n    yield put({\n      type: constants.PUT_TEST.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nfunction* watchUpdateTest() {\n  yield takeLatest(constants.PUT_TEST.REQUEST, updateTest);\n}\n\n// ---------------\n\n/**\n * Export the root saga by forking all available sagas.\n */\nexport function* rootSaga() {\n  yield all([\n    fork(watchAddTestExample),\n    fork(watchGetTest),\n    fork(watchDeleteTest),\n    fork(watchUpdateTest)\n  ]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport { rootSaga as testSaga } from './test-saga';\n\nexport function* rootSaga() {\n  const sagas = [\n      testSaga\n  ].map(fork);\n\n  yield all(sagas);\n}\n\nexport default rootSaga;\n","import { rootReducer, RootState } from './state/reducers/rootReducer';\r\nimport { applyMiddleware, combineReducers, compose, createStore, Middleware } from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\nimport rootSaga from './state/sagas';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst saveToLocalStorage = (state: any) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    if (localStorage.getItem(\"app-version\") !== '6') {\r\n      localStorage.clear();\r\n      localStorage.setItem(\"app-version\", \"6\");\r\n    }\r\n    localStorage.setItem('state', serializedState)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) return undefined\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    console.log(err)\r\n    return undefined\r\n  }\r\n}\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n      __REDUX_DEVTOOLS_EXTENSION__?: typeof compose;\r\n    }\r\n}\r\n\r\nexport const logger:\r\n  Middleware<{}, RootState> = store => next => action => {\r\n  console.log('[Middleware] Dispatching:', action)\r\n  const result = next(action)\r\n  console.log('[Middleware] next state:', store.getState( ))\r\n  return result\r\n}\r\n\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nexport const store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk),applyMiddleware(sagaMiddleware)));\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\n// Run the saga now\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\n// sagaMiddleware.run(mySaga)\r\n\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n","import { store } from \"../store\"\r\n\r\n// GET STATE\r\nlet state = store.getState();\r\nstore.subscribe(() => {\r\n    state = store.getState()\r\n    accessTokenReqData.set('code', state.login.authCode)\r\n    refreshTokenReqData.set('refresh_token', state.login.refreshToken || '')\r\n})\r\n\r\n// ENDPOINTS\r\nexport const AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize'\r\nexport const TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token'\r\nexport const REDIRECT_URI = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://joaquinconti.github.io/spotify-app/'\r\nexport const API_URL = 'https://api.spotify.com/v1'\r\nexport const BASE_URL = process.env.NODE_ENV === 'development' ? '/' : '/spotify-app'\r\n\r\n// APP \r\nexport const CLIENT_ID = 'e4f6b37ece0b444f968fb0fc51aa80a6' || '790a84d7acf74bb19d1190baa107e089'\r\nexport const CLIENT_SECRET = '656c1bec03e7497caf18c88a094d8fbc' || '06abc79902244fc5b6428a26ed6df6e6'\r\nexport const scopes = 'user-read-private user-read-email user-read-recently-played user-read-playback-state user-top-read user-modify-playback-state user-read-currently-playing'\r\n\r\n// LOGIN\r\nexport const loginUri = AUTH_ENDPOINT +\r\n'?response_type=code' +\r\n'&client_id=' + CLIENT_ID +\r\n(scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\r\n'&redirect_uri=' + encodeURIComponent(REDIRECT_URI);\r\n\r\nexport const base64EncodedIdAndSecret = btoa(`${CLIENT_ID}:${CLIENT_SECRET}`)\r\n\r\n// DATA FOR POST REQUEST\r\nexport const accessTokenReqData = new URLSearchParams()\r\n    accessTokenReqData.append('grant_type', 'authorization_code')\r\n    accessTokenReqData.append('redirect_uri', REDIRECT_URI)\r\n    accessTokenReqData.append('code', state.login.authCode)\r\n\r\nexport const refreshTokenReqData = new URLSearchParams()\r\n    refreshTokenReqData.append('grant_type', 'refresh_token')\r\n    refreshTokenReqData.append('client_id', CLIENT_ID)","import { AxiosRequestConfig } from \"axios\";\r\nimport { base64EncodedIdAndSecret, REDIRECT_URI } from \"../index\"\r\nimport { store } from \"../../store\";\r\n\r\n// GET STATE\r\nlet state = store.getState();\r\nlet axiosGetTopArtistsConfig: AxiosRequestConfig\r\nstore.subscribe(() => {\r\n    state = store.getState()\r\n    axiosGetTopArtistsConfig = {\r\n        headers: {\r\n            'Authorization': `Bearer ${state.login.accessToken}`\r\n        }\r\n    }\r\n})\r\n\r\n// REQUESTS CONFIGS\r\nexport const axiosTokenReqConfig = {\r\n    headers: {\r\n        'Authorization': `Basic ${base64EncodedIdAndSecret}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n}\r\n\r\nexport const axiosGetAuthorizeConfig = {\r\n    headers: {\r\n        'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n        'Origin': REDIRECT_URI + '/'\r\n    }\r\n}\r\n\r\nexport { axiosGetTopArtistsConfig }","import axios from 'axios';\r\nimport { Dispatch } from 'react';\r\nimport { API_URL, axiosGetTopArtistsConfig, axiosTokenReqConfig, accessTokenReqData, refreshTokenReqData, TOKEN_ENDPOINT, BASE_URL } from '../../api';\r\nimport { ActionType } from '../action-types/action-types';\r\nimport { Action } from '../actions/actions';\r\n\r\nexport interface IUserAuthorizedPayload {\r\n  isLoggedIn: boolean\r\n  accessToken?: string,\r\n  refreshToken?: string,\r\n  expiresAt?: Date,\r\n}\r\n\r\nexport const userAuthorized = (isAuthorized: boolean) => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n\r\n    let payload: IUserAuthorizedPayload = {\r\n      isLoggedIn: true\r\n    }\r\n    if (!isAuthorized) {\r\n      dispatch({\r\n        type: ActionType.USER_LOGOUT,\r\n        payload: null\r\n      })\r\n      payload = {\r\n        isLoggedIn: false,\r\n        accessToken: '',\r\n        refreshToken: ''\r\n      }\r\n    }\r\n    localStorage.clear()\r\n    dispatch({\r\n        type: ActionType.USER_AUTHORIZED,\r\n        payload: payload\r\n    })\r\n  }\r\n}\r\n\r\nexport const authCodeObtained = (authCode: string) => {\r\n  return {\r\n      type: ActionType.AUTH_CODE_OBTAINED,\r\n      payload: authCode\r\n  }\r\n}\r\n\r\n\r\nexport const getAccessToken = () => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    console.log(\"[Access Token] fetching\")\r\n    try {\r\n      const { data } = await axios.post(TOKEN_ENDPOINT, accessTokenReqData ,axiosTokenReqConfig)\r\n      data.expires_in = new Date()\r\n      data.expires_in.setHours(data.expires_in.getHours() + 1);\r\n      window.history.pushState({}, '', BASE_URL)\r\n      dispatch({\r\n        type: ActionType.ACCESS_TOKEN_OBTAINED,\r\n        payload: data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: 'There was an error authenticating, please try again.'\r\n      })\r\n      localStorage.clear()\r\n      console.log(err.response)\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRefreshToken = (refreshToken: string | undefined) => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    console.log(\"[RefreshToken Token] fetching\")\r\n    try {\r\n      const { data } = await axios.post(TOKEN_ENDPOINT, refreshTokenReqData, axiosTokenReqConfig)\r\n      console.log(data)\r\n      data.expires_in = new Date()\r\n      data.expires_in.setHours(data.expires_in.getHours() + 1);\r\n      dispatch({\r\n        type: ActionType.ACCESS_TOKEN_OBTAINED,\r\n        payload: data\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: 'There was an error authenticating, please try again.'\r\n      })\r\n      localStorage.clear()\r\n      console.log(err.response)\r\n    }\r\n  }\r\n}","import axios from 'axios';\r\nimport { Action } from './../actions/actions';\r\nimport { Dispatch } from 'redux';\r\nimport { axiosGetTopArtistsConfig, API_URL } from '../../api/index';\r\nimport { ActionType, constants } from './../action-types/action-types';\r\n\r\ninterface UserInputSelect {\r\n  type: string\r\n  timeTerm: string\r\n}\r\n\r\nexport const getUserProfileInfo = () => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const { data } = await axios.get(`${API_URL}/me`, axiosGetTopArtistsConfig)\r\n      dispatch({\r\n        type: ActionType.USER_PROFILE_INFO_OBTAINED,\r\n        payload: data\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: 'There was an error obtaining your profile.'\r\n      })\r\n      console.log(error.response)\r\n    }\r\n  }\r\n}\r\n\r\nexport const getUserTopData = (userInputSelect: UserInputSelect, expiresIn: Date) => { \r\n  const { type, timeTerm } = userInputSelect\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.ERROR,\r\n      payload: null\r\n    })\r\n    // console.log('[getUserTopData]', userInputSelect)\r\n    dispatch({\r\n      type: ActionType.TOGGLE_LOADING,\r\n      payload: true\r\n    })\r\n\r\n    try {\r\n      dispatch({\r\n        type: ActionType.USER_TOP_DATA_OBTAINED,\r\n        payload: []\r\n      })\r\n      // console.log(\"[getUserTopData] fetching\")\r\n      const { data } = await axios.get(`${API_URL}/me/top/${type}?time_range=${timeTerm}`, axiosGetTopArtistsConfig)\r\n      // console.log('[ActionCreator]', data)\r\n      dispatch({\r\n        type: ActionType.USER_TOP_DATA_OBTAINED,\r\n        payload: data.items\r\n      })\r\n      dispatch({\r\n        type: ActionType.TOGGLE_LOADING,\r\n        payload: false\r\n      })\r\n    } catch (error) {\r\n      localStorage.clear()\r\n      dispatch({\r\n        type: ActionType.TOGGLE_LOADING,\r\n        payload: false\r\n      })\r\n      console.log(error.response)\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: 'Something went wrong. Try re-logging in.'\r\n      })\r\n    }\r\n  }  \r\n}\r\n\r\nexport const userInputSelected = (userInputSelect: UserInputSelect) => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.ERROR,\r\n      payload: null\r\n    })\r\n    dispatch({\r\n      type: ActionType.USER_TOP_DATA_OBTAINED,\r\n      payload: []\r\n    })\r\n    try {\r\n        dispatch({\r\n          type: ActionType.USER_INPUT_SELECTED,\r\n          payload: userInputSelect\r\n        })\r\n    } catch (error) {\r\n      localStorage.clear()\r\n      console.log(error.response)\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: 'Something went wrong. Try re-logging in.'\r\n      })\r\n    }\r\n  }\r\n} \r\n\r\n\r\n// ELIMINAR\r\nexport const testAction = () => {\r\n  return {\r\n      type: constants.POST_TEST.REQUEST\r\n  }\r\n} ","import { ActionType } from '../action-types/action-types';\r\n\r\nexport const toggleLoading = (loading: boolean) => {\r\n  return {\r\n    type: ActionType.TOGGLE_LOADING,\r\n    payload: loading\r\n  }\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { loginActionCreators, uiActionCreators, userDataActionCreators } from '../state';\r\n\r\n// NEED REFACTOR\r\nexport const useLoginActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(loginActionCreators, dispatch);\r\n};\r\n\r\nexport const useUserDataActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(userDataActionCreators, dispatch);\r\n};\r\n\r\nexport const useUIDataActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(uiActionCreators, dispatch);\r\n};","interface paramsType {\r\n\t[pair: string]: string,\r\n\tcode: string\r\n}\r\n\r\nconst getParams = (url: string): paramsType => {\r\n\tconst params: paramsType = { code: ''}\r\n\tconst parser: HTMLAnchorElement = document.createElement('a');\r\n\tparser.href = url;\r\n\tlet query: string = parser.search.substring(1);\r\n\tlet vars: Array<string> = query.split('&');\r\n\tfor (let i = 0; i < vars.length; i++) {\r\n\t\tlet pair: Array<string> = vars[i].split('=');\r\n\t\tparams[pair[0]] = decodeURIComponent(pair[1]);\r\n\t}\r\n\treturn params;\r\n};\r\n\r\nexport default getParams;","import { Container, GridList, GridListTile, GridListTileBar } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\n// import { CardGroup, Col, Container, Row } from 'react-bootstrap'\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\r\nimport DataCard from '../DataCard/DataCard'\r\nimport css from './UserTopData.module.css'\r\n\r\nconst UserTopData: React.FC = () => {\r\n  const { userTopData, userInputSelect } = useTypedSelector(state => state.userData)\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    {/* <Container maxWidth='md'> */}\r\n      <GridList cols={2} cellHeight={300} spacing={1} className={css.GridList}>\r\n        {userTopData && userTopData.map((artist: any, index: number) => (\r\n          <GridListTile key={index} cols={index === 0 ? 2 : 1} rows={1}>\r\n              <img className={css.ArtistImage} src={userInputSelect.type === 'artists' ? artist.images[0].url : artist.album.images[0].url}  alt={artist.name} />\r\n              <GridListTileBar\r\n              title={`${index + 1}. ${artist.name}`}\r\n              titlePosition=\"top\"\r\n              actionPosition=\"left\"\r\n              className={css.TitleBar}\r\n              /> \r\n              {/* <DataCard \r\n                key={index}\r\n                index={index}\r\n                name={artist.name} \r\n                src={userInputSelect.type === 'artists' ? artist.images[0].url : artist.album.images[0].url} \r\n                alt={artist.name}\r\n              /> */}\r\n        </GridListTile> \r\n        ))}\r\n      </GridList>\r\n    {/* </Container> */}\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default UserTopData\r\n","import { Avatar, Button, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLoginActions, useUserDataActions } from '../../hooks/useActions'\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\r\nimport Modal from '../UI/Modal/Modal'\r\nimport UserTopData from '../UserTopData/UserTopData'\r\nimport css from './Main.module.css'\r\n\r\nconst Main: React.FC = () => {\r\n  const [showingModal, setShowingModal] = useState(false)\r\n\r\n  const { userInputSelect, userTopData, userProfileInfo } = useTypedSelector(state => state.userData)\r\n  const { accessToken, refreshToken, expiresAt } = useTypedSelector(state => state.login)\r\n\r\n  const { getUserProfileInfo,getUserTopData, userInputSelected } = useUserDataActions()\r\n  const { userAuthorized, getRefreshToken } = useLoginActions()\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>, inputChangedIs: string) => {\r\n    userInputSelected({\r\n      type: inputChangedIs === 'type' ? e.target.value : userInputSelect.type,\r\n      timeTerm: inputChangedIs === 'timeTerm' ? e.target.value : userInputSelect.timeTerm\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return\r\n    const now = new Date()\r\n    if (new Date(expiresAt).getTime() < now.getTime()) {\r\n      getRefreshToken(refreshToken)\r\n    }\r\n    console.log(userProfileInfo)\r\n    if (!userProfileInfo.images.length) {\r\n      getUserProfileInfo()\r\n    }\r\n    getUserTopData(userInputSelect, expiresAt)\r\n  }, [userProfileInfo, refreshToken, accessToken, userInputSelect])\r\n\r\n  return (\r\n    userTopData.length && userProfileInfo.images.length ? \r\n    <React.Fragment>\r\n      \r\n      {/* {showingModal &&\r\n        <Modal>\r\n          <h3>Are you sure you want to log out?</h3>\r\n          <br/> \r\n          <Button onClick={() => userAuthorized(false)}>Yes</Button> \r\n          <Button onClick={() => setShowingModal(false)}>No</Button>\r\n        </Modal>} */}\r\n\r\n      <h4>{userProfileInfo.display_name}</h4>\r\n      <Avatar className={css.UserImage} src={userProfileInfo.images[0].url} alt={`${userProfileInfo.display_name} image`} />\r\n      <Button variant=\"contained\" onClick={() => userAuthorized(false)}>Log Out</Button>\r\n      <div className={css.GroupDiv}>\r\n        <div>\r\n          <label htmlFor=\"typeSelect\" >Get your top: </label>\r\n          <select value={userInputSelect.type} className={css.Select} name=\"type\" onChange={(e) => handleChange(e, e.target.name)}>\r\n              <option value=\"artists\">Artists</option>\r\n              <option value=\"tracks\">Tracks</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"timeTermSelect\" >From: </label>\r\n          <select value={userInputSelect.timeTerm} className={css.Select} name=\"timeTerm\" onChange={(e) => handleChange(e, e.target.name)}>\r\n              <option value=\"short_term\">This month</option>\r\n              <option value=\"medium_term\">6 months</option>\r\n              <option value=\"long_term\">All time</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      {/* <br />\r\n      <InputLabel htmlFor=\"type\">Get your top...</InputLabel>\r\n      <Select\r\n        name=\"type\"\r\n        value={userInputSelect.type}\r\n        onChange={(e) => handleSelectChange(e, e.target.name)}\r\n      >\r\n        <MenuItem value={\"artists\"}>Artists</MenuItem>\r\n        <MenuItem value={\"tracks\"}>Tracks</MenuItem>\r\n      </Select>\r\n      <br />\r\n      <InputLabel htmlFor=\"timeTerm\">From...</InputLabel>\r\n      <Select\r\n        name=\"timeTerm\"\r\n        value={userInputSelect.timeTerm}\r\n        onChange={(e) => handleSelectChange(e, e.target.name)}\r\n      >\r\n        <MenuItem value={\"short_term\"}>This month</MenuItem>\r\n        <MenuItem value={\"medium_term\"}>6 months</MenuItem>\r\n        <MenuItem value={\"long_term\"}>All time</MenuItem>\r\n      </Select>\r\n      <br /> */}\r\n      <UserTopData />\r\n    </React.Fragment> : null\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useLoginActions } from '../../../hooks/useActions'\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector'\r\n\r\nconst Error: React.FC = () => {\r\n  const { error } = useTypedSelector(state => state.error)\r\n  const { userAuthorized } = useLoginActions()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>{error}</p>\r\n      <Button variant=\"contained\" onClick={() => userAuthorized(false)}>Log Out</Button>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React, { useEffect } from 'react'\r\nimport css from './Layout.module.css'\r\nimport { useTypedSelector, } from '../../hooks/useTypedSelector'\r\nimport logo from \"../../assets/logos/01_RGB/02_PNG/Spotify_Logo_RGB_White.png\"\r\nimport Backdrop from '../UI/Backdrop/Backdrop'\r\nimport Spinner from '../UI/Spinner/Spinner'\r\nimport { useLoginActions } from '../../hooks/useActions'\r\nimport getParams from '../../helpers/getParams'\r\nimport Main from '../Main/Main'\r\nimport { loginUri } from '../../api'\r\nimport { Button } from '@material-ui/core'\r\n\r\n// ELIMINAR\r\nimport { useDispatch } from 'react-redux';\r\nimport { testAction } from '../../state/action-creators/user-data-action-creators';\r\nimport Error from '../UI/Error/Error'\r\n\r\nconst Layout: React.FC = () => {\r\n  const { authCode, isLoggedIn, accessToken  } = useTypedSelector(state => state.login)\r\n  const { loading } = useTypedSelector(state => state.ui)\r\n  const { error } = useTypedSelector(state => state.error)\r\n\r\n  const { userAuthorized, authCodeObtained, getAccessToken } = useLoginActions()\r\n\r\n  \r\n  // ELIMINAR\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const code = getParams(window.location.href).code\r\n    if (!code || code === authCode) return\r\n    authCodeObtained(code)\r\n    getAccessToken()\r\n    // userAuthorized(true)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <main className={css.Container}>\r\n      <img\r\n        className={css.Logo}\r\n        src={logo}\r\n        alt=\"spotify-logo\"\r\n      />\r\n\r\n      {error && <Error />}\r\n\r\n      {accessToken ?\r\n      \r\n      <React.Fragment>\r\n        <Backdrop show={loading}>\r\n          <Spinner />\r\n        </Backdrop>\r\n        \r\n        <Main />\r\n      </React.Fragment> :\r\n      <React.Fragment>\r\n        \r\n        <a className={css.Anchor} href={loginUri}>LOG IN WITH SPOTIFY</a>\r\n      </React.Fragment>}\r\n\r\n      {/* <button onClick={() => dispatch(testAction())}>Jeje mira este llama a la saga</button> */}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\nimport css from './App.module.css';\nimport Layout from './components/Layout/Layout';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className={css.App}>\n      <BrowserRouter>\n        <Layout />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserImage\":\"Main_UserImage__3qxFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerAbsolute\":\"Layout_ContainerAbsolute__GVuZd\",\"Container\":\"Layout_Container__BQf6m\",\"Loader\":\"Layout_Loader__1uyud\",\"Logo\":\"Layout_Logo__1vjZI\",\"Anchor\":\"Layout_Anchor__16oze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleBar\":\"UserTopData_TitleBar__3Y7Do\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1B3w2\",\"Anchor\":\"App_Anchor__1EPTJ\",\"Logo\":\"App_Logo__TfFJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3Q11w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__15U4I\",\"spinner\":\"Spinner_spinner__3ClXT\"};"],"sourceRoot":""}